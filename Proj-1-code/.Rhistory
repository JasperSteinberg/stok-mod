#some inherited code from 1e
maxiS = c()
for (i in 1:1000){
Y_0 = c(950,50,0)
Y_N = Y_0
maxI = c("0,0")
for (x in 1:300) {
S_n = rbinom(1,Y_N[3],0.005)
I_n = rbinom(1,Y_N[1],0.5*Y_N[2]/1000)
R_n = rbinom(1,Y_N[2],0.1)
Y_N = c(Y_N[1]-I_n+S_n,Y_N[2]-R_n+I_n,Y_N[3]-S_n+R_n)
#saves the peak and peak date
if (Y_N[2] > maxI[1]){maxI = c(Y_N[2],x)}
}
maxiS = append(maxiS,maxI)
}
#ad hoc solution for weird R formatting, creates list of inverse of occurrences
eI = numeric(1000)
eE = numeric(1000)
for (n in 1:1000) {
eI[maxiS[2*n]] = eI[maxiS[2*n]]+1
eE[maxiS[2*n-1]] = eE[maxiS[2*n-1]]+1
}
for (jk in 1:1000){
eI[jk] = eI[jk]/1000
eE[jk] = eE[jk]/1000
}
#calculates expected values
expI = 0
for (i in 1:1000){
expI = expI + i*eI[i]}
expE = 0
for (i in 1:1000){
expE = expE + i*eE[i]}
print(expI)
print(expE)
#more ad hoc reformatting to find conf.ints.
dataI =c()
for (i in 1:100)
{dataI = append(dataI,maxiS[2*i])}
dataE =c()
for (i in 1:100)
{dataE = append(dataE,maxiS[2*i-1])}
#calculate, extract and print the confidence intervals
result <- t.test(dataI)
confidence_interval <- result$conf.int
confidence_interval
result <- t.test(dataE)
confidence_interval <- result$conf.int
confidence_interval
#inherited code from 1e) and 1f)
cols = ["red","orange","blue","green"]
#inherited code from 1e) and 1f)
cols = c("red","orange","blue","green")
#inherited code from 1e) and 1f)
cols = c("red","orange","blue","green")
counter = 0
for (vac in c(0,100,600,800)){
counter = counter +1
maxiS = c()
for (i in 1:1000){
Y_0 = c(950-vac,50,0,vac)
Y_N = Y_0
I <- c()
maxI = c("0,0")
for (x in 1:300) {
S_n = rbinom(1,Y_N[3],0.005)
I_n = rbinom(1,Y_N[1],0.5*Y_N[2]/1000)
R_n = rbinom(1,Y_N[2],0.1)
Y_N = c(Y_N[1]-I_n+S_n,Y_N[2]-R_n+I_n,Y_N[3]-S_n+R_n)
I = append(I,Y_N[2])
if (Y_N[2] > maxI[1]){maxI = c(Y_N[2],x)}
}
maxiS = append(maxiS,maxI)
}
eI = numeric(1000)
eE = numeric(1000)
for (n in 1:1000) {
eI[maxiS[2*n]] = eI[maxiS[2*n]]+1
eE[maxiS[2*n-1]] = eE[maxiS[2*n-1]]+1
}
for (jk in 1:1000){
eI[jk] = eI[jk]/1000
eE[jk] = eE[jk]/1000
}
expI = 0
for (i in 1:1000){
expI = expI + i*eI[i]}
expE = 0
for (i in 1:1000){
expE = expE + i*eE[i]}
print(expI)
print(expE)
plot(c(1:300),I,type = "l", lwd=2, col = cols[counter], ylab="People", xlab="Days")
}
#inherited code from 1e) and 1f)
cols = c("red","orange","blue","green")
counter = 0
for (vac in c(0,100,600,800)){
counter = counter +1
maxiS = c()
for (i in 1:1000){
Y_0 = c(950-vac,50,0,vac)
Y_N = Y_0
I <- c()
maxI = c("0,0")
for (x in 1:300) {
S_n = rbinom(1,Y_N[3],0.005)
I_n = rbinom(1,Y_N[1],0.5*Y_N[2]/1000)
R_n = rbinom(1,Y_N[2],0.1)
Y_N = c(Y_N[1]-I_n+S_n,Y_N[2]-R_n+I_n,Y_N[3]-S_n+R_n)
I = append(I,Y_N[2])
if (Y_N[2] > maxI[1]){maxI = c(Y_N[2],x)}
}
maxiS = append(maxiS,maxI)
}
eI = numeric(1000)
eE = numeric(1000)
for (n in 1:1000) {
eI[maxiS[2*n]] = eI[maxiS[2*n]]+1
eE[maxiS[2*n-1]] = eE[maxiS[2*n-1]]+1
}
for (jk in 1:1000){
eI[jk] = eI[jk]/1000
eE[jk] = eE[jk]/1000
}
expI = 0
for (i in 1:1000){
expI = expI + i*eI[i]}
expE = 0
for (i in 1:1000){
expE = expE + i*eE[i]}
print(expI)
print(expE)
plot(0,0,type = "l", lwd=2, col = cols[counter], ylab="People", xlab="Days")
lines(I, col = cols[counter],lwd = 2)
}
#inherited code from 1e) and 1f)
cols = c("red","orange","blue","green")
counter = 0
for (vac in c(0,100,600,800)){
counter = counter +1
maxiS = c()
for (i in 1:1000){
Y_0 = c(950-vac,50,0,vac)
Y_N = Y_0
I <- c()
maxI = c("0,0")
for (x in 1:300) {
S_n = rbinom(1,Y_N[3],0.005)
I_n = rbinom(1,Y_N[1],0.5*Y_N[2]/1000)
R_n = rbinom(1,Y_N[2],0.1)
Y_N = c(Y_N[1]-I_n+S_n,Y_N[2]-R_n+I_n,Y_N[3]-S_n+R_n)
I = append(I,Y_N[2])
if (Y_N[2] > maxI[1]){maxI = c(Y_N[2],x)}
}
maxiS = append(maxiS,maxI)
}
eI = numeric(1000)
eE = numeric(1000)
for (n in 1:1000) {
eI[maxiS[2*n]] = eI[maxiS[2*n]]+1
eE[maxiS[2*n-1]] = eE[maxiS[2*n-1]]+1
}
for (jk in 1:1000){
eI[jk] = eI[jk]/1000
eE[jk] = eE[jk]/1000
}
expI = 0
for (i in 1:1000){
expI = expI + i*eI[i]}
expE = 0
for (i in 1:1000){
expE = expE + i*eE[i]}
print(expI)
print(expE)
plot(c(0,900),c(0,300),type = "l", lwd=2, col = "white", ylab="People", xlab="Days")
lines(I, col = cols[counter],lwd = 2)
}
#inherited code from 1e) and 1f)
cols = c("red","orange","blue","green")
counter = 0
plot(c(0,300),c(0,000),type = "l", lwd=2, col = "white", ylab="People", xlab="Days")
for (vac in c(0,100,600,800)){
counter = counter +1
maxiS = c()
for (i in 1:1000){
Y_0 = c(950-vac,50,0,vac)
Y_N = Y_0
I <- c()
maxI = c("0,0")
for (x in 1:300) {
S_n = rbinom(1,Y_N[3],0.005)
I_n = rbinom(1,Y_N[1],0.5*Y_N[2]/1000)
R_n = rbinom(1,Y_N[2],0.1)
Y_N = c(Y_N[1]-I_n+S_n,Y_N[2]-R_n+I_n,Y_N[3]-S_n+R_n)
I = append(I,Y_N[2])
if (Y_N[2] > maxI[1]){maxI = c(Y_N[2],x)}
}
maxiS = append(maxiS,maxI)
}
eI = numeric(1000)
eE = numeric(1000)
for (n in 1:1000) {
eI[maxiS[2*n]] = eI[maxiS[2*n]]+1
eE[maxiS[2*n-1]] = eE[maxiS[2*n-1]]+1
}
for (jk in 1:1000){
eI[jk] = eI[jk]/1000
eE[jk] = eE[jk]/1000
}
expI = 0
for (i in 1:1000){
expI = expI + i*eI[i]}
expE = 0
for (i in 1:1000){
expE = expE + i*eE[i]}
print(expI)
print(expE)
lines(I, col = cols[counter],lwd = 2)
}
#inherited code from 1e) and 1f)
cols = c("red","orange","blue","green")
counter = 0
plot(c(0,300),c(0,900),type = "l", lwd=2, col = "white", ylab="People", xlab="Days")
for (vac in c(0,100,600,800)){
counter = counter +1
maxiS = c()
for (i in 1:1000){
Y_0 = c(950-vac,50,0,vac)
Y_N = Y_0
I <- c()
maxI = c("0,0")
for (x in 1:300) {
S_n = rbinom(1,Y_N[3],0.005)
I_n = rbinom(1,Y_N[1],0.5*Y_N[2]/1000)
R_n = rbinom(1,Y_N[2],0.1)
Y_N = c(Y_N[1]-I_n+S_n,Y_N[2]-R_n+I_n,Y_N[3]-S_n+R_n)
I = append(I,Y_N[2])
if (Y_N[2] > maxI[1]){maxI = c(Y_N[2],x)}
}
maxiS = append(maxiS,maxI)
}
eI = numeric(1000)
eE = numeric(1000)
for (n in 1:1000) {
eI[maxiS[2*n]] = eI[maxiS[2*n]]+1
eE[maxiS[2*n-1]] = eE[maxiS[2*n-1]]+1
}
for (jk in 1:1000){
eI[jk] = eI[jk]/1000
eE[jk] = eE[jk]/1000
}
expI = 0
for (i in 1:1000){
expI = expI + i*eI[i]}
expE = 0
for (i in 1:1000){
expE = expE + i*eE[i]}
print(expI)
print(expE)
lines(I, col = cols[counter],lwd = 2)
}
#inherited code from 1e) and 1f)
cols = c("red","orange","blue","green")
counter = 0
plot(c(0,300),c(0,600),type = "l", lwd=2, col = "white", ylab="People infected", xlab="Days")
for (vac in c(0,100,600,800)){
counter = counter +1
maxiS = c()
for (i in 1:1000){
Y_0 = c(950-vac,50,0,vac)
Y_N = Y_0
I <- c()
maxI = c("0,0")
for (x in 1:300) {
S_n = rbinom(1,Y_N[3],0.005)
I_n = rbinom(1,Y_N[1],0.5*Y_N[2]/1000)
R_n = rbinom(1,Y_N[2],0.1)
Y_N = c(Y_N[1]-I_n+S_n,Y_N[2]-R_n+I_n,Y_N[3]-S_n+R_n)
I = append(I,Y_N[2])
if (Y_N[2] > maxI[1]){maxI = c(Y_N[2],x)}
}
maxiS = append(maxiS,maxI)
}
eI = numeric(1000)
eE = numeric(1000)
for (n in 1:1000) {
eI[maxiS[2*n]] = eI[maxiS[2*n]]+1
eE[maxiS[2*n-1]] = eE[maxiS[2*n-1]]+1
}
for (jk in 1:1000){
eI[jk] = eI[jk]/1000
eE[jk] = eE[jk]/1000
}
expI = 0
for (i in 1:1000){
expI = expI + i*eI[i]}
expE = 0
for (i in 1:1000){
expE = expE + i*eE[i]}
print(expI)
print(expE)
lines(I, col = cols[counter],lwd = 2)
}
legend(100,400,legend = c("0","100","600","800"), col = c("red","purple","blue","green"),lwd =c(2,2,2,2),cex = 0.8)
#inherited code from 1e) and 1f)
cols = c("red","purple","blue","green")
counter = 0
plot(c(0,300),c(0,600),type = "l", lwd=2, col = "white", ylab="People infected", xlab="Days")
for (vac in c(0,100,600,800)){
counter = counter +1
maxiS = c()
for (i in 1:1000){
Y_0 = c(950-vac,50,0,vac)
Y_N = Y_0
I <- c()
maxI = c("0,0")
for (x in 1:300) {
S_n = rbinom(1,Y_N[3],0.005)
I_n = rbinom(1,Y_N[1],0.5*Y_N[2]/1000)
R_n = rbinom(1,Y_N[2],0.1)
Y_N = c(Y_N[1]-I_n+S_n,Y_N[2]-R_n+I_n,Y_N[3]-S_n+R_n)
I = append(I,Y_N[2])
if (Y_N[2] > maxI[1]){maxI = c(Y_N[2],x)}
}
maxiS = append(maxiS,maxI)
}
eI = numeric(1000)
eE = numeric(1000)
for (n in 1:1000) {
eI[maxiS[2*n]] = eI[maxiS[2*n]]+1
eE[maxiS[2*n-1]] = eE[maxiS[2*n-1]]+1
}
for (jk in 1:1000){
eI[jk] = eI[jk]/1000
eE[jk] = eE[jk]/1000
}
expI = 0
for (i in 1:1000){
expI = expI + i*eI[i]}
expE = 0
for (i in 1:1000){
expE = expE + i*eE[i]}
print(expI)
print(expE)
lines(I, col = cols[counter],lwd = 2)
}
legend(100,400,legend = c("0","100","600","800"), col = c("red","purple","blue","green"),lwd =c(2,2,2,2),cex = 0.8)
